import unittest
import sys
import os


def run_all_tests():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—è"""
    print("üéµ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—è")
    print("=" * 60)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
    current_dir = os.path.dirname(os.path.abspath(__file__))
    sys.path.insert(0, current_dir)

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    test_loader = unittest.TestLoader()
    test_suite = test_loader.discover('tests', pattern='test_*.py')

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_runner = unittest.TextTestRunner(verbosity=2)
    result = test_runner.run(test_suite)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("=" * 60)
    print(f"–¢–µ—Å—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ: {result.testsRun}")
    print(f"–û—à–∏–±–æ–∫: {len(result.errors)}")
    print(f"–ü—Ä–æ–≤–∞–ª–æ–≤: {len(result.failures)}")

    if result.wasSuccessful():
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        return True
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.")
        return False


if __name__ == '__main__':
    success = run_all_tests()
    sys.exit(0 if success else 1)